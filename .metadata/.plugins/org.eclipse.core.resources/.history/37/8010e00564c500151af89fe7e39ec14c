//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.2.
//


package com.zsy.frame.sample.control.android.a30designmode.mvp.ui;

import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.TextView;
import com.zsy.frame.sample.R.id;
import com.zsy.frame.sample.control.android.a30designmode.mvp.bean.DoterBean;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class MvpAct_
    extends MvpAct
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @java.lang.Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @java.lang.Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @java.lang.Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @java.lang.Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static MvpAct_.IntentBuilder_ intent(Context context) {
        return new MvpAct_.IntentBuilder_(context);
    }

    public static MvpAct_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new MvpAct_.IntentBuilder_(fragment);
    }

    public static MvpAct_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new MvpAct_.IntentBuilder_(supportFragment);
    }

    @java.lang.Override
    public void onViewChanged(HasViews hasViews) {
        tv_info = ((TextView) hasViews.findViewById(id.tv_info));
        {
            View view = hasViews.findViewById(id.bt);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @java.lang.Override
                    public void onClick(View view) {
                        MvpAct_.this.clickButton();
                    }

                }
                );
            }
        }
        initPresenter();
    }

    @java.lang.Override
    public void showLoading() {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                MvpAct_.super.showLoading();
            }

        }
        );
    }

    @java.lang.Override
    public void showEmpty() {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                MvpAct_.super.showEmpty();
            }

        }
        );
    }

    @java.lang.Override
    public void showContent() {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                MvpAct_.super.showContent();
            }

        }
        );
    }

    @java.lang.Override
    public void showNonet() {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                MvpAct_.super.showNonet();
            }

        }
        );
    }

    @java.lang.Override
    public void showDoterInfo(final DoterBean info) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                MvpAct_.super.showDoterInfo(info);
            }

        }
        );
    }

    @java.lang.Override
    public void showError() {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                MvpAct_.super.showError();
            }

        }
        );
    }

    @java.lang.Override
    public void clickButton() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    MvpAct_.super.clickButton();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<MvpAct_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, MvpAct_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), MvpAct_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), MvpAct_.class);
            fragmentSupport_ = fragment;
        }

        @java.lang.Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode);
                } else {
                    super.startForResult(requestCode);
                }
            }
        }

    }

}
